/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./client/src/chat.js":
/*!****************************!*\
  !*** ./client/src/chat.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$messages\": () => (/* binding */ $messages),\n/* harmony export */   \"displayMsg\": () => (/* binding */ displayMsg),\n/* harmony export */   \"addRematchButton\": () => (/* binding */ addRematchButton)\n/* harmony export */ });\n/* harmony import */ var _connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./connection */ \"./client/src/connection.js\");\n // message elements\n\nconst $messageForm = document.querySelector('#message-form');\nconst $messageFormInput = document.querySelector('input');\nconst $messageFormButton = document.querySelector('button');\nconst $messages = document.querySelector('#messages'); // message event handler\n\n$messageForm.addEventListener('submit', e => {\n  e.preventDefault();\n  $messageFormButton.setAttribute('disabled', 'disabled');\n  const message = e.target.elements.message.value;\n  _connection__WEBPACK_IMPORTED_MODULE_0__.socket.emit('sendMessage', message, error => {\n    $messageFormButton.removeAttribute('disabled');\n    $messageFormInput.value = '';\n    $messageFormInput.focus();\n\n    if (error) {\n      return console.log(error);\n    }\n  });\n});\n\nconst displayMsg = msg => {\n  const html = `<p>${msg}<p>`;\n  $messages.insertAdjacentHTML('beforeend', html);\n}; // display message in chat \n\n\n_connection__WEBPACK_IMPORTED_MODULE_0__.socket.on('message', message => {\n  console.log(message);\n  const html = `<p>${message}</p>`;\n  $messages.insertAdjacentHTML('beforeend', html);\n});\n\nconst addRematchButton = () => {\n  const html = '<button id=\"rematch\">Rematch</button>';\n  $messages.insertAdjacentHTML('beforeend', html);\n  document.getElementById('rematch').addEventListener('click', () => {\n    const sentMsg = '<p>rematch requested</p>';\n    $messages.insertAdjacentHTML('beforeend', sentMsg);\n    _connection__WEBPACK_IMPORTED_MODULE_0__.socket.emit('offer-rematch');\n    document.getElementById('rematch').remove();\n  });\n};\n\n\n\n//# sourceURL=webpack://pixelchess/./client/src/chat.js?");

/***/ }),

/***/ "./client/src/connection.js":
/*!**********************************!*\
  !*** ./client/src/connection.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"socket\": () => (/* binding */ socket)\n/* harmony export */ });\n// socket \nconst socket = io();\n\n//# sourceURL=webpack://pixelchess/./client/src/connection.js?");

/***/ }),

/***/ "./client/src/game.js":
/*!****************************!*\
  !*** ./client/src/game.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _gameState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameState */ \"./client/src/gameState.js\");\n/* harmony import */ var _connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connection */ \"./client/src/connection.js\");\n/* harmony import */ var _chat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat */ \"./client/src/chat.js\");\n/* harmony import */ var _userInput__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./userInput */ \"./client/src/userInput.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util */ \"./client/src/util.js\");\n/* harmony import */ var _sounds__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sounds */ \"./client/src/sounds.js\");\n\n\n\n\n\n\n\nconst {\n  Chess\n} = __webpack_require__(/*! ../../modules/chessJS/Chess */ \"./modules/chessJS/Chess.js\");\n\nconst qs = __webpack_require__(/*! qs */ \"./node_modules/qs/lib/index.js\");\n\nconst query = qs.parse(location.search, {\n  ignoreQueryPrefix: true\n}); // join game\n\nif (query.gameId) {\n  let username; // hide game screen\n\n  document.getElementById('main').style.display = \"none\"; // show username form\n\n  document.getElementById('username-form-box').style.display = \"flex\";\n  document.getElementById('username-form').addEventListener('submit', e => {\n    e.preventDefault(); // hide form \n\n    document.getElementById('username-form-box').style.display = \"none\"; // show game\n\n    document.getElementById('main').style.display = \"flex\";\n    username = e.target.elements.username.value;\n    const gameId = query.gameId;\n    _connection__WEBPACK_IMPORTED_MODULE_1__.socket.emit('join', {\n      username,\n      gameId\n    }, error => {\n      if (error) {\n        alert(error);\n        location.href = '/';\n      }\n    });\n  });\n} else {\n  // create game\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.color = query.color;\n  let color = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.color;\n  const username = query.username;\n  _connection__WEBPACK_IMPORTED_MODULE_1__.socket.emit('create', {\n    username,\n    color\n  }, error => {\n    if (error) {\n      alert(error);\n      location.href = '/';\n    }\n  });\n} // get game ID from server\n\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('created', gameId => {\n  const html = `<p>Game ID: ${gameId}</p>`;\n  _chat__WEBPACK_IMPORTED_MODULE_2__.$messages.insertAdjacentHTML('beforeend', html); // invite link\n\n  const copyLink = `<button id=\"copy\">Copy Link</button>`;\n  _chat__WEBPACK_IMPORTED_MODULE_2__.$messages.insertAdjacentHTML('beforeend', copyLink);\n  document.getElementById('copy').addEventListener('click', () => {\n    navigator.clipboard.writeText(`${location.href}&gameId=${gameId}`);\n  }); // display empty board until opponent joins\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas = document.getElementById('gameCanvas');\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas.getContext('2d');\n  (0,_util__WEBPACK_IMPORTED_MODULE_4__.drawBoard)();\n}); // wait for opponent to join\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('opponentJoined', opponent => {\n  // initialize game\n  startGame();\n});\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('joined', gameInfo => {\n  const html = `<p>Game ID: ${gameInfo.room}</p>`;\n  _chat__WEBPACK_IMPORTED_MODULE_2__.$messages.insertAdjacentHTML('beforeend', html);\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.color = gameInfo.color;\n  console.log(_gameState__WEBPACK_IMPORTED_MODULE_0__.state.color); // initialize game\n\n  startGame();\n});\n\nconst startGame = () => {\n  // play sound\n  _sounds__WEBPACK_IMPORTED_MODULE_5__.default.gameStart.play();\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas = document.getElementById('gameCanvas');\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas.getContext('2d'); // draw\n\n  (0,_util__WEBPACK_IMPORTED_MODULE_4__.drawBoard)(); // load spritesheet\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.sprites = new Image();\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.sprites.src = 'assets/img/spritesheet.png';\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.sprites.onload = () => {\n    (0,_util__WEBPACK_IMPORTED_MODULE_4__.drawPieces)();\n  }; // mouse down\n\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas.addEventListener('mousedown', _userInput__WEBPACK_IMPORTED_MODULE_3__.handleMouseDown); // right click\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas.addEventListener('contextmenu', e => {\n    e.preventDefault();\n  }); // mouse up\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas.addEventListener('mouseup', _userInput__WEBPACK_IMPORTED_MODULE_3__.handleMouseUp); // mouse move\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas.addEventListener('mousemove', _userInput__WEBPACK_IMPORTED_MODULE_3__.handleMouseMove);\n}; // resign button\n\n\ndocument.getElementById('resign').addEventListener('click', () => {\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.status !== 'active') return;\n  _connection__WEBPACK_IMPORTED_MODULE_1__.socket.emit('resign');\n}); // offer draw button\n\ndocument.getElementById('offer-draw').addEventListener('click', () => {\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.status !== 'active') return;\n  (0,_chat__WEBPACK_IMPORTED_MODULE_2__.displayMsg)('you offer a draw');\n  _connection__WEBPACK_IMPORTED_MODULE_1__.socket.emit('offer-draw');\n}); // listen for moves from the server\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('move', move => {\n  console.log(`${move} received from server`); // update state\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.play(move); // redraw        \n\n  (0,_util__WEBPACK_IMPORTED_MODULE_4__.drawBoard)();\n  (0,_util__WEBPACK_IMPORTED_MODULE_4__.drawPieces)(); // play sound\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.capture) {\n    _sounds__WEBPACK_IMPORTED_MODULE_5__.default.capture.play();\n  } else if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.check) {\n    _sounds__WEBPACK_IMPORTED_MODULE_5__.default.check.play();\n  } else {\n    _sounds__WEBPACK_IMPORTED_MODULE_5__.default.movePiece.play();\n  } // detect checkmate or stalemate \n\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.checkmate || _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.stalemate) {\n    if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.stalemate) {\n      (0,_chat__WEBPACK_IMPORTED_MODULE_2__.displayMsg)('draw by stalemate');\n    }\n\n    if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.checkmate) {\n      (0,_chat__WEBPACK_IMPORTED_MODULE_2__.displayMsg)(`${_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.winner} wins by checkmate`);\n    }\n\n    endGame();\n  }\n}); // handle illegal move message from server\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('illegalMove', update => {\n  alert(`Illegal move: ${update.notation}`);\n}); // handle resignation from server\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('resign', color => {\n  const html = `<p>${color} resigns</p>`;\n  _chat__WEBPACK_IMPORTED_MODULE_2__.$messages.insertAdjacentHTML('beforeend', html);\n  endGame();\n}); // handle offer draw\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('offer-draw', color => {\n  let html = `<p id=\"draw-offer\">${color} offers a draw. Accept?</p>`;\n  html += '<button id=\"yes\">Yes</button><button id=\"no\">No</button>';\n  _chat__WEBPACK_IMPORTED_MODULE_2__.$messages.insertAdjacentHTML('beforeend', html); // add event handlers to draw buttons\n\n  document.getElementById('yes').addEventListener('click', () => {\n    _connection__WEBPACK_IMPORTED_MODULE_1__.socket.emit('accept-draw');\n  });\n  document.getElementById('no').addEventListener('click', () => {\n    document.getElementById('draw-offer').remove();\n    document.getElementById('yes').remove();\n    document.getElementById('no').remove();\n  });\n}); // handle accept draw\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('accept-draw', () => {\n  (0,_chat__WEBPACK_IMPORTED_MODULE_2__.displayMsg)('draw by agreement');\n  endGame();\n}); // handle offer rematch\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('offer-rematch', () => {\n  // remove rematch button\n  document.getElementById('rematch').remove(); // accept rematch button\n\n  const html = `<p id=\"accept-text\">Accept rematch?<p><button id=\"accept\">Accept</button>`;\n  _chat__WEBPACK_IMPORTED_MODULE_2__.$messages.insertAdjacentHTML('beforeend', html);\n  document.getElementById('accept').addEventListener('click', () => {\n    _connection__WEBPACK_IMPORTED_MODULE_1__.socket.emit('accept-rematch'); // remove accept button\n\n    document.getElementById('accept-text').remove();\n    document.getElementById('accept').remove();\n  });\n}); // handle accept rematch\n\n_connection__WEBPACK_IMPORTED_MODULE_1__.socket.on('accept-rematch', () => {\n  // reset local game\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game = new Chess();\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.status = 'active'; // swap color\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.color === 'white') {\n    _gameState__WEBPACK_IMPORTED_MODULE_0__.state.color = 'black';\n  } else {\n    _gameState__WEBPACK_IMPORTED_MODULE_0__.state.color = 'white';\n  }\n\n  startGame();\n});\n\nconst endGame = () => {\n  _sounds__WEBPACK_IMPORTED_MODULE_5__.default.gameEnd.play();\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.status = 'inactive';\n  (0,_util__WEBPACK_IMPORTED_MODULE_4__.fadeBoard)();\n  (0,_chat__WEBPACK_IMPORTED_MODULE_2__.addRematchButton)();\n};\n\n//# sourceURL=webpack://pixelchess/./client/src/game.js?");

/***/ }),

/***/ "./client/src/gameState.js":
/*!*********************************!*\
  !*** ./client/src/gameState.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"state\": () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _modules_chessJS_Chess__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../modules/chessJS/Chess */ \"./modules/chessJS/Chess.js\");\n/* harmony import */ var _modules_chessJS_Chess__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_chessJS_Chess__WEBPACK_IMPORTED_MODULE_0__);\n // chess game and graphics\n\nlet canvas;\nlet ctx;\nlet sprites;\nconst size = 100; // Chess instance\n\nlet game = new _modules_chessJS_Chess__WEBPACK_IMPORTED_MODULE_0__.Chess();\nlet status = 'active'; // client color\n\nlet color; // click and drag logic    \n\nlet selected = false;\nlet pieceIdx;\nlet lastX = 0;\nlet lastY = 0; // promotion menu\n\nlet promotionMenuOpen = false;\nlet menuX;\nlet promotionMove;\nconst state = {\n  canvas,\n  ctx,\n  size,\n  sprites,\n  game,\n  status,\n  color,\n  selected,\n  pieceIdx,\n  lastX,\n  lastY,\n  promotionMenuOpen,\n  menuX,\n  promotionMove\n};\n\n//# sourceURL=webpack://pixelchess/./client/src/gameState.js?");

/***/ }),

/***/ "./client/src/sounds.js":
/*!******************************!*\
  !*** ./client/src/sounds.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst sounds = {}; // absolute path to sounds directory\n\nconst path = './assets/sounds/';\nsounds.movePiece = new Audio(path + 'movePiece.wav');\nsounds.capture = new Audio(path + 'capture.wav');\nsounds.check = new Audio(path + 'check.wav');\nsounds.badMove = new Audio(path + 'badMove.wav');\nsounds.gameStart = new Audio(path + 'gameStart.wav');\nsounds.gameEnd = new Audio(path + 'gameEnd.wav');\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sounds);\n\n//# sourceURL=webpack://pixelchess/./client/src/sounds.js?");

/***/ }),

/***/ "./client/src/userInput.js":
/*!*********************************!*\
  !*** ./client/src/userInput.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"handleMouseDown\": () => (/* binding */ handleMouseDown),\n/* harmony export */   \"handleMouseUp\": () => (/* binding */ handleMouseUp),\n/* harmony export */   \"handleMouseMove\": () => (/* binding */ handleMouseMove)\n/* harmony export */ });\n/* harmony import */ var _gameState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameState */ \"./client/src/gameState.js\");\n/* harmony import */ var _connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connection */ \"./client/src/connection.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./client/src/util.js\");\n/* harmony import */ var _sounds__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sounds */ \"./client/src/sounds.js\");\n/* harmony import */ var _chat__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chat */ \"./client/src/chat.js\");\n\n\n\n\n\n\nconst handleMouseDown = e => {\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.status === 'inactive') return; // disable click and drag if promoting \n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.promotionMenuOpen) {\n    return;\n  } // get state vars\n\n\n  let pieces = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.pieces; // get mouse coords\n\n  let mouseX = e.offsetX;\n  let mouseY = e.offsetY; // get square\n\n  let squareX = Math.floor(mouseX / 100);\n  let squareY = Math.floor(mouseY / 100); // reflect square for black\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.color === \"black\") {\n    console.log(\"reflecting square\");\n    squareX = 7 - squareX;\n    squareY = 7 - squareY;\n  }\n\n  console.log(`clicked on square at: ${squareX} ${squareY}`); // check if square has a piece and is user's color       \n\n  pieces.forEach((p, index) => {\n    if (p.boardX === squareX && p.boardY === squareY && p.color === _gameState__WEBPACK_IMPORTED_MODULE_0__.state.color) {\n      console.log(`found piece at: ${squareX} ${squareY}`);\n      _gameState__WEBPACK_IMPORTED_MODULE_0__.state.selected = true;\n      _gameState__WEBPACK_IMPORTED_MODULE_0__.state.pieceIdx = index; // center piece on cursor\n\n      let centerX = squareX;\n      let centerY = squareY;\n\n      if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.color === \"black\") {\n        centerX = -squareX + 7;\n        centerY = -squareY + 7;\n      }\n\n      p.offsetX = e.offsetX - (centerX * 100 + 50);\n      p.offsetY = e.offsetY - (centerY * 100 + 50);\n      (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawBoard)();\n      (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawPieces)();\n    }\n  });\n  const selectedPiece = pieces[_gameState__WEBPACK_IMPORTED_MODULE_0__.state.pieceIdx];\n  console.log(\"selected piece:\", selectedPiece);\n};\n\nconst handleMouseUp = e => {\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.status === 'inactive') return; // get mouse coords\n\n  let mouseX = e.offsetX;\n  let mouseY = e.offsetY; // get square\n\n  let squareX = Math.floor(mouseX / 100);\n  let squareY = Math.floor(mouseY / 100); // promotion selection\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.promotionMenuOpen) {\n    // reflect menu location for black\n    if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.color === \"black\") {\n      _gameState__WEBPACK_IMPORTED_MODULE_0__.state.menuX = 7 - _gameState__WEBPACK_IMPORTED_MODULE_0__.state.menuX;\n    }\n\n    if (squareX === _gameState__WEBPACK_IMPORTED_MODULE_0__.state.menuX && mouseY < 400) {\n      const menuLocations = ['q', 'r', 'n', 'b'];\n      _gameState__WEBPACK_IMPORTED_MODULE_0__.state.promotionMove += '=';\n      const move = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.promotionMove + menuLocations[squareY];\n      _gameState__WEBPACK_IMPORTED_MODULE_0__.state.promotionMenuOpen = false; // play move\n\n      execute(move); // update screen\n\n      (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawBoard)();\n      (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawPieces)(); // check if game is over\n\n      if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.checkmate || _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.stalemate) {\n        _gameState__WEBPACK_IMPORTED_MODULE_0__.state.status = 'inactive';\n        _sounds__WEBPACK_IMPORTED_MODULE_3__.default.gameEnd.play();\n        (0,_util__WEBPACK_IMPORTED_MODULE_2__.fadeBoard)();\n        _chat__WEBPACK_IMPORTED_MODULE_4__.addRematchButton;\n      }\n\n      return;\n    } else {\n      return;\n    }\n  } // reflect for black\n\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.color === \"black\") {\n    squareX = 7 - squareX;\n    squareY = 7 - squareY;\n  } // drop piece\n\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.selected) {\n    let piece = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.pieces[_gameState__WEBPACK_IMPORTED_MODULE_0__.state.pieceIdx];\n    let startX = piece.boardX;\n    let startY = piece.boardY; // cancel if right click\n\n    if (e.button === 2) {\n      piece.offsetX = 0;\n      piece.offsetY = 0;\n      (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawBoard)();\n      (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawPieces)();\n      _gameState__WEBPACK_IMPORTED_MODULE_0__.state.selected = false;\n      return;\n    }\n\n    let moveMade = false;\n    let legal = false;\n    let move = \"\"; // check color\n\n    if (piece.color === _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.toMove) {\n      moveMade = true;\n      move += (0,_util__WEBPACK_IMPORTED_MODULE_2__.idxToSquare)(startX, startY);\n      move += (0,_util__WEBPACK_IMPORTED_MODULE_2__.idxToSquare)(squareX, squareY); // check if move is legal\n\n      legal = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.legal(move);\n\n      if (!legal) {\n        console.log(\"illegal move\", move); // console.log(state.game.pieces)           \n\n        moveMade = false; // play sound if king in check\n\n        if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.check) {\n          _sounds__WEBPACK_IMPORTED_MODULE_3__.default.badMove.play();\n        }\n      } else {\n        // promotion menu\n        if (piece.name === \"pawn\" && (squareY === 0 || squareY === 7)) {\n          _gameState__WEBPACK_IMPORTED_MODULE_0__.state.promotionMenuOpen = true;\n          _gameState__WEBPACK_IMPORTED_MODULE_0__.state.menuX = squareX;\n          _gameState__WEBPACK_IMPORTED_MODULE_0__.state.promotionMove = move; // draw menu\n\n          (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawPromotionMenu)(piece.color, squareX); // reset piece offset\n\n          piece.offsetX = 0;\n          piece.offsetY = 0; // deselect piece\n\n          _gameState__WEBPACK_IMPORTED_MODULE_0__.state.selected = false;\n          return;\n        }\n      }\n    } // update piece                \n\n\n    piece.offsetX = 0;\n    piece.offsetY = 0;\n    _gameState__WEBPACK_IMPORTED_MODULE_0__.state.selected = false; // update and redraw                          \n\n    if (moveMade) {\n      execute(move); // remove draw offer if present\n\n      const drawOffer = document.getElementById('draw-offer');\n\n      if (drawOffer) {\n        drawOffer.remove();\n        document.getElementById('yes').remove();\n        document.getElementById('no').remove();\n      }\n    } // redraw\n\n\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawBoard)();\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawPieces)(); // check if game is over\n\n    if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.checkmate || _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.stalemate) {\n      _gameState__WEBPACK_IMPORTED_MODULE_0__.state.status = 'inactive';\n      const msg = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.checkmate ? `${_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.winner} wins by checkmate` : 'draw by stalemate';\n      (0,_chat__WEBPACK_IMPORTED_MODULE_4__.displayMsg)(msg);\n      _sounds__WEBPACK_IMPORTED_MODULE_3__.default.gameEnd.play();\n      (0,_util__WEBPACK_IMPORTED_MODULE_2__.fadeBoard)();\n      (0,_chat__WEBPACK_IMPORTED_MODULE_4__.addRematchButton)();\n    }\n  }\n};\n\nconst handleMouseMove = e => {\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.status === 'inactive') return; // do nothing if promotion menu is open\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.promotionMenuOpen) {\n    return;\n  } // get mouse coords\n\n\n  let mouseX = e.offsetX;\n  let mouseY = e.offsetY; // calculate mouse movement\n\n  let dx = mouseX - _gameState__WEBPACK_IMPORTED_MODULE_0__.state.lastX;\n  let dy = mouseY - _gameState__WEBPACK_IMPORTED_MODULE_0__.state.lastY;\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.lastX = mouseX;\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.lastY = mouseY; // move piece\n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.selected) {\n    _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.pieces[_gameState__WEBPACK_IMPORTED_MODULE_0__.state.pieceIdx].offsetX += dx;\n    _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.pieces[_gameState__WEBPACK_IMPORTED_MODULE_0__.state.pieceIdx].offsetY += dy; // redraw\n\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawBoard)();\n    (0,_util__WEBPACK_IMPORTED_MODULE_2__.drawPieces)();\n  }\n};\n\nconst execute = move => {\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.play(move);\n  console.log(move);\n  console.log(_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.pieces); // play sound    \n\n  if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.capture) {\n    _sounds__WEBPACK_IMPORTED_MODULE_3__.default.capture.play();\n  } else if (_gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.check) {\n    _sounds__WEBPACK_IMPORTED_MODULE_3__.default.check.play();\n  } else {\n    _sounds__WEBPACK_IMPORTED_MODULE_3__.default.movePiece.play();\n  } // send move to server            \n\n\n  _connection__WEBPACK_IMPORTED_MODULE_1__.socket.emit(\"move\", move);\n};\n\n\n\n//# sourceURL=webpack://pixelchess/./client/src/userInput.js?");

/***/ }),

/***/ "./client/src/util.js":
/*!****************************!*\
  !*** ./client/src/util.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"drawBoard\": () => (/* binding */ drawBoard),\n/* harmony export */   \"drawPieces\": () => (/* binding */ drawPieces),\n/* harmony export */   \"drawPromotionMenu\": () => (/* binding */ drawPromotionMenu),\n/* harmony export */   \"idxToSquare\": () => (/* binding */ idxToSquare),\n/* harmony export */   \"fadeBoard\": () => (/* binding */ fadeBoard)\n/* harmony export */ });\n/* harmony import */ var _gameState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameState */ \"./client/src/gameState.js\");\n // draw the board\n\nconst drawBoard = () => {\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.fillStyle = '#7C5CBF';\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.fillRect(0, 0, _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas.width, _gameState__WEBPACK_IMPORTED_MODULE_0__.state.canvas.height); // draw light squares\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.fillStyle = 'beige';\n\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      if ((i + j) % 2 == 0) {\n        _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.fillRect(100 * i, 100 * j, 100, 100);\n      }\n    }\n  }\n}; // sx, sy, dx, dy\n\n\nconst drawPiece = (x, y, i, j, dx, dy) => {\n  let size = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.size; // default to 0 if offset not set\n\n  if (!dx) {\n    dx = 0;\n  }\n\n  if (!dy) {\n    dy = 0;\n  }\n\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.drawImage(_gameState__WEBPACK_IMPORTED_MODULE_0__.state.sprites, x * size, y * size, size, size, i * size + dx, j * size + dy, size, size);\n};\n\nconst drawPieces = () => {\n  const spriteLocations = [\"pawn\", \"bishop\", \"knight\", \"rook\", \"king\", \"queen\"];\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.game.pieces.forEach(p => {\n    const spriteX = spriteLocations.indexOf(p.name);\n    const spriteY = p.color === \"white\" ? 0 : 1;\n    const boardX = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.color === \"white\" ? p.boardX : 7 - p.boardX;\n    const boardY = _gameState__WEBPACK_IMPORTED_MODULE_0__.state.color === \"white\" ? p.boardY : 7 - p.boardY;\n    drawPiece(spriteX, spriteY, boardX, boardY, p.offsetX, p.offsetY);\n  });\n};\n\nconst drawPromotionMenu = (color, x) => {\n  // reflect x position for black\n  if (color === \"black\") {\n    x = 7 - x;\n  }\n\n  const spriteLocations = [\"pawn\", \"bishop\", \"knight\", \"rook\", \"king\", \"queen\"];\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.fillstyle = \"white\";\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.fillRect(100 * x, 0, 100, 400);\n  const spriteY = color === \"white\" ? 0 : 1;\n  drawPiece(spriteLocations.indexOf(\"queen\"), spriteY, x, 0);\n  drawPiece(spriteLocations.indexOf(\"rook\"), spriteY, x, 1);\n  drawPiece(spriteLocations.indexOf(\"knight\"), spriteY, x, 2);\n  drawPiece(spriteLocations.indexOf(\"bishop\"), spriteY, x, 3);\n};\n\nconst idxToSquare = (x, y) => {\n  let file = String.fromCharCode(x + 97);\n  let rank = 8 - y;\n  return file + rank;\n}; // fade the board\n\n\nconst fadeBoard = () => {\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.globalAlpha = 0.8;\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.fillstyle = 'black';\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.fillRect(0, 0, 800, 800);\n  _gameState__WEBPACK_IMPORTED_MODULE_0__.state.ctx.globalAlpha = 1.0;\n};\n\n\n\n//# sourceURL=webpack://pixelchess/./client/src/util.js?");

/***/ }),

/***/ "./modules/chessJS/Chess.js":
/*!**********************************!*\
  !*** ./modules/chessJS/Chess.js ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  kingInCheck\n} = __webpack_require__(/*! ./attacking */ \"./modules/chessJS/attacking.js\");\n\nconst {\n  checkmate,\n  stalemate\n} = __webpack_require__(/*! ./mate */ \"./modules/chessJS/mate.js\");\n\nconst {\n  legalMove,\n  makeMove\n} = __webpack_require__(/*! ./move */ \"./modules/chessJS/move.js\");\n\nconst {\n  initializePieces,\n  loadBoard\n} = __webpack_require__(/*! ./utils */ \"./modules/chessJS/utils.js\");\n\nclass Chess {\n  constructor() {\n    this.pieces = [];\n    this.moves = [];\n    this.lastMove = \"start\";\n    this.toMove = \"white\";\n    this.stalemate = false;\n    this.checkmate = false;\n    this.capture = false;\n    this.check = false;\n    this.numPieces = 32;\n    initializePieces(this.pieces);\n  }\n\n  legal(move) {\n    if (this.checkmate) {\n      console.log('checkmate');\n      return false;\n    }\n\n    if (this.stalemate) {\n      console.log('stalemate');\n      return false;\n    }\n\n    return legalMove(this.pieces, move, this.lastMove);\n  }\n\n  play(move) {\n    this.moves.push(move);\n    this.lastMove = move;\n    this.pieces = makeMove(this.pieces, move); // checkmate or stalemate?\n\n    const king = this.pieces.find(p => p.name === \"king\" && p.color !== this.toMove);\n\n    if (checkmate(this.pieces, king, this.lastMove)) {\n      this.checkmate = true;\n      this.winner = this.toMove;\n    } else if (stalemate(this.pieces, king, this.lastMove)) {\n      this.stalemate = true;\n    } else {\n      // update to move\n      this.toMove = this.toMove === \"white\" ? \"black\" : \"white\";\n    } // check or capture on last move?\n\n\n    this.check = kingInCheck(this.pieces, king.boardX, king.boardY);\n    this.capture = this.pieces.length !== this.numPieces;\n    this.numPieces = this.pieces.length;\n  } // print the board to the console\n\n\n  printBoard() {\n    const board = [];\n\n    for (let i = 0; i < 8; i++) {\n      const row = ['_', '_', '_', '_', '_', '_', '_', '_'];\n      board.push(row);\n    }\n\n    this.pieces.forEach(p => {\n      let char = p.name[0];\n\n      if (p.name === 'knight') {\n        char = 'n';\n      }\n\n      if (p.color === 'black') {\n        char = char.toUpperCase();\n      }\n\n      board[p.boardY][p.boardX] = char;\n    });\n\n    for (let i = 0; i < 8; i++) {\n      console.log(board[i].join(' '));\n    }\n  } // load board state from char array\n\n\n  load(board, toMove, lastMove) {\n    this.pieces = loadBoard(board);\n    this.toMove = toMove;\n    this.lastMove = lastMove;\n    this.stalemate = false;\n    this.checkmate = false;\n    this.capture = false;\n    this.check = false;\n    this.numPieces = this.pieces.length; // check for mate\n\n    const king = this.pieces.find(p => p.name === \"king\" && p.color === this.toMove);\n\n    if (checkmate(this.pieces, king, lastMove)) {\n      this.checkmate = true;\n      this.winner = this.toMove;\n    } else if (stalemate(this.pieces, king, lastMove)) {\n      this.stalemate = true;\n    }\n  }\n\n}\n\nmodule.exports = {\n  Chess,\n  makeMove\n};\n\n//# sourceURL=webpack://pixelchess/./modules/chessJS/Chess.js?");

/***/ }),

/***/ "./modules/chessJS/attacking.js":
/*!**************************************!*\
  !*** ./modules/chessJS/attacking.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  validSquare,\n  isOccupied,\n  isBlocked\n} = __webpack_require__(/*! ./utils */ \"./modules/chessJS/utils.js\"); // checks if any enemy pieces are attacking the square x,y\n\n\nconst kingInCheck = (pieces, x, y) => {\n  let color;\n  pieces.forEach(p => {\n    // ignore temporarily deleted captured piece when searching for legal moves\n    if (!p.delete && p.boardX === x && p.boardY === y) {\n      color = p.color;\n    }\n  });\n  let check = false;\n  pieces.forEach(p => {\n    if (p.color !== color && !p.delete && isAttacking(pieces, p, x, y)) {\n      check = true;\n    }\n  }); // console.log(`is ${color} king at ${x} ${y} in check?`)   \n  // console.log(check ? 'yes' : 'no')    \n\n  return check;\n}; // is piece p attacking x,y?\n\n\nconst isAttacking = (pieces, p, x, y) => {\n  let diffX = Math.abs(x - p.boardX);\n  let diffY = Math.abs(y - p.boardY);\n\n  if (p.name === \"knight\") {\n    if (diffX === 1 && diffY === 2 || diffX === 2 && diffY === 1) {\n      return true;\n    }\n  } else if (p.name === \"pawn\") {\n    let step = p.color === \"white\" ? -1 : 1;\n\n    if (y - p.boardY === step && diffX === 1) {\n      return true;\n    }\n  }\n\n  if (p.name === \"bishop\" || p.name === \"queen\") {\n    if (diffX === diffY && pathClear(pieces, p.boardX, p.boardY, x, y)) {\n      return true;\n    }\n  }\n\n  if (p.name === \"rook\" || p.name === \"queen\") {\n    if ((diffX === 0 || diffY === 0) && pathClear(pieces, p.boardX, p.boardY, x, y)) {\n      return true;\n    }\n  }\n}; // does the king located at x, y have a legal move?\n\n\nconst kingCanMove = (pieces, x, y) => {\n  // need color of king for safeSquare()\n  let color;\n  pieces.forEach(p => {\n    if (p.boardX === x && p.boardY === y) {\n      color = p.color;\n    }\n  });\n\n  for (let i = -1; i <= 1; i++) {\n    for (let j = -1; j <= 1; j++) {\n      if (validSquare(x + i, y + j)) {\n        // check if square is occupied by same color\n        // TODO?: escape check via capture\n        // console.log(`can king move to ${x+i} ${y+j}?`)\n        if (!isBlocked(pieces, color, x + i, y + j)) {\n          if (safeSquare(pieces, color, x + i, y + j)) {\n            // console.log(`escape to ${x+i} ${y+j}`)\n            return true;\n          }\n        } else {// console.log('occupied')\n        }\n      }\n    }\n  }\n\n  return false;\n}; // is the square at x, y under attack from opposite color?\n\n\nconst safeSquare = (pieces, color, x, y) => {\n  let safe = true;\n  pieces.forEach(p => {\n    if (p.color !== color && isAttacking(pieces, p, x, y)) {\n      // console.log(\"not safe\")\n      safe = false;\n    }\n  });\n  return safe;\n};\n\nconst pathClear = (pieces, x, y, targetX, targetY) => {\n  // console.log(`from ${x} ${y} to ${targetX} ${targetY}`)   \n  let test = true;\n  let stepX = 0;\n  let stepY = 0;\n  let steps = 0;\n  let diffX = Math.abs(targetX - x);\n  let diffY = Math.abs(targetY - y);\n\n  if (diffX != 0) {\n    stepX = (targetX - x) / diffX;\n    steps = diffX;\n  }\n\n  if (diffY != 0) {\n    stepY = (targetY - y) / diffY;\n    steps = diffY;\n  } // console.log(`steps: ${steps} dx: ${diffX} dy: ${diffY}`)\n\n\n  for (let i = 1; i < steps; i++) {\n    x += stepX;\n    y += stepY;\n\n    if (test) {// console.log(`checking ${x} ${y}`)\n    }\n\n    if (isOccupied(pieces, x, y)) {\n      return false;\n    }\n  } // console.log(\"path is clear\")\n\n\n  return true;\n};\n\nmodule.exports = {\n  pathClear,\n  isAttacking,\n  kingInCheck,\n  kingCanMove,\n  safeSquare\n};\n\n//# sourceURL=webpack://pixelchess/./modules/chessJS/attacking.js?");

/***/ }),

/***/ "./modules/chessJS/mate.js":
/*!*********************************!*\
  !*** ./modules/chessJS/mate.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  legalMove\n} = __webpack_require__(/*! ./move */ \"./modules/chessJS/move.js\");\n\nconst {\n  coordsToNotation\n} = __webpack_require__(/*! ./utils */ \"./modules/chessJS/utils.js\");\n\nconst {\n  kingInCheck,\n  kingCanMove\n} = __webpack_require__(/*! ./attacking */ \"./modules/chessJS/attacking.js\"); // is king checkmated?\n\n\nconst checkmate = (pieces, king, lastMove) => {\n  // console.log('checkmate?')\n  if (kingInCheck(pieces, king.boardX, king.boardY)) {\n    // console.log('king in check after ' + lastMove)\n    if (kingCanMove(pieces, king.boardX, king.boardY)) {\n      return false;\n    } // console.log('king cannot move')\n    // is there a legal move for this color?\n\n\n    const color = king.color;\n    const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'];\n    let legal = false;\n    pieces.forEach(p => {\n      if (p.color === color) {\n        let start = coordsToNotation(p.boardX, p.boardY);\n        files.forEach(f => {\n          ranks.forEach(r => {\n            let move = start + f + r;\n\n            if (legalMove(pieces, move, lastMove)) {\n              // console.log('legal move: ' + move)\n              legal = true;\n            }\n          });\n        });\n      }\n    });\n\n    if (!legal) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst stalemate = (pieces, king, lastMove) => {\n  if (!kingInCheck, king.boardX, king.boardY) {\n    // does the king have a legal move?\n    if (kingCanMove(pieces, king.boardX, king.boardY)) {\n      return false;\n    } // is there a legal move for this color?\n\n\n    const color = king.color;\n    const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'];\n    let legal = false;\n    pieces.forEach(p => {\n      if (p.color === color) {\n        let start = coordsToNotation(p.boardX, p.boardY);\n        files.forEach(f => {\n          ranks.forEach(r => {\n            let move = start + f + r;\n\n            if (legalMove(pieces, move, lastMove)) {\n              // console.log('legal move:' + move)\n              legal = true;\n            }\n          });\n        });\n      }\n    });\n\n    if (!legal) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = {\n  checkmate,\n  stalemate\n};\n\n//# sourceURL=webpack://pixelchess/./modules/chessJS/mate.js?");

/***/ }),

/***/ "./modules/chessJS/move.js":
/*!*********************************!*\
  !*** ./modules/chessJS/move.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\n  parseMove,\n  initializePieces,\n  charToName\n} = __webpack_require__(/*! ./utils */ \"./modules/chessJS/utils.js\");\n\nconst {\n  pathClear,\n  kingInCheck,\n  safeSquare\n} = __webpack_require__(/*! ./attacking */ \"./modules/chessJS/attacking.js\");\n\nconst makeMove = (pieces, move) => {\n  // parse move notation\n  const {\n    pieceX,\n    pieceY,\n    targetX,\n    targetY\n  } = parseMove(move); // castling\n  // check if actually castling    \n\n  const king = pieces.find(p => p.name === 'king' && p.boardX === pieceX && p.boardY === pieceY);\n\n  if (king) {\n    if (!king.hasMoved) {\n      if (move === \"e1g1\" || move === \"e8g8\") {\n        const rook = pieces.find(p => p.boardX === 7 && p.boardY === pieceY && p.name === \"rook\");\n        rook.boardX = 5;\n      }\n\n      if (move === \"e1c1\" || move === \"e8c8\") {\n        const rook = pieces.find(p => p.boardX === 0 && p.boardY === pieceY && p.name === \"rook\");\n        rook.boardX = 3;\n      }\n    }\n  } // get piece\n\n\n  const piece = pieces.find(p => p.boardX === pieceX && p.boardY === pieceY); // promotion (f7f8=q)\n\n  const backRank = piece.color === \"white\" ? 0 : 7;\n\n  if (piece.name === \"pawn\" && targetY === backRank) {\n    piece.name = charToName(move[5]);\n  } // delete captured piece if capture is made\n\n\n  const captured = pieces.find(p => p.boardX === targetX && p.boardY === targetY);\n\n  if (captured) {\n    // console.log(\"capture\")\n    captured.delete = true;\n  }\n\n  pieces = pieces.filter(p => p.delete === false); // update piece position\n\n  piece.boardX = targetX;\n  piece.boardY = targetY;\n  piece.hasMoved = true;\n  return pieces;\n};\n\nconst legalMove = (pieces, move, lastMove) => {\n  // parse move notation\n  const {\n    pieceX,\n    pieceY,\n    targetX,\n    targetY\n  } = parseMove(move); // same square\n\n  if (pieceX === targetX && pieceY === targetY) {\n    return false;\n  } // get piece\n\n\n  const piece = pieces.find(p => p.boardX === pieceX && p.boardY === pieceY);\n\n  if (!piece) {\n    console.log(`no piece on ${pieceX} ${pieceY}`);\n    return false;\n  } // check if target is occupied\n\n\n  let occupied = false;\n  pieces.forEach(p => {\n    if (p.boardX === targetX && p.boardY === targetY) {\n      if (p.color === piece.color) {\n        occupied = true;\n      } // pawns are blocked from moving forward by enemy pieces\n\n\n      if (piece.name === 'pawn' && pieceX - targetX === 0) {\n        occupied = true;\n      }\n    }\n  });\n\n  if (occupied) {\n    // console.log(\"occupied\")\n    return false;\n  }\n\n  let valid = canMove(pieces, piece, targetX, targetY, lastMove);\n\n  if (!valid) {\n    return false;\n  } // save piece position\n\n\n  let lastX = piece.boardX;\n  let lastY = piece.boardY; // check if capture occurs\n\n  const capturedPiece = pieces.find(p => p.boardX === targetX && p.boardY === targetY); // move piece\n\n  piece.boardX = targetX;\n  piece.boardY = targetY; // get position of king    \n\n  let kingX;\n  let kingY;\n  pieces.forEach(p => {\n    if (p.color === piece.color && p.name === \"king\") {\n      kingX = p.boardX;\n      kingY = p.boardY;\n    }\n  }); // hide captured piece if capture occurs\n\n  if (capturedPiece) {\n    capturedPiece.delete = true;\n  }\n\n  let check = kingInCheck(pieces, kingX, kingY); // reset pieces\n\n  piece.boardX = lastX;\n  piece.boardY = lastY;\n\n  if (capturedPiece) {\n    capturedPiece.delete = false; // reset en passant simulated capture\n\n    if (capturedPiece.enPassant) {\n      const step = piece.color === 'white' ? 1 : -1;\n      capturedPiece.boardY += step;\n      capturedPiece.enPassant = false;\n    }\n  }\n\n  if (check) {\n    // console.log(\"cannot move into check\")        \n    return false;\n  }\n\n  return true;\n};\n\nfunction canMove(pieces, piece, targetX, targetY, lastMove) {\n  let diffX = Math.abs(targetX - piece.boardX);\n  let diffY = Math.abs(targetY - piece.boardY); // check if path is clear\n\n  if (piece.name !== \"knight\") {\n    if (!pathClear(pieces, piece.boardX, piece.boardY, targetX, targetY)) {\n      return false;\n    }\n  }\n\n  if (piece.name === \"pawn\") {\n    const step = piece.color === \"white\" ? -1 : 1;\n    const pawnStart = piece.color === \"white\" ? 6 : 1; // normal move      \n\n    if (targetY === piece.boardY + step && targetX === piece.boardX) {\n      return true;\n    } // 2 squares on first move\n\n\n    if (targetY === piece.boardY + 2 * step && targetX === piece.boardX && piece.boardY === pawnStart) {\n      return true;\n    } // capture\n\n\n    if (targetY === piece.boardY + step && diffX === 1) {\n      let capture = false;\n      pieces.forEach(p => {\n        if (p.color !== piece.color && p.boardX === targetX && p.boardY === targetY) {\n          capture = true;\n        }\n      }); // en passant\n      // attacker must be on 5th rank (3) for white, 4th (4) for black\n\n      const attackerY = piece.color === \"white\" ? 3 : 4;\n\n      if (piece.boardY === attackerY) {\n        // is there an enemy pawn 1 square behind target?\n        const targetPawn = pieces.find(p => p.color !== piece.color && p.name === \"pawn\" && p.boardX === targetX && p.boardY === targetY - step);\n\n        if (targetPawn) {\n          // was target pawn moved 2 squares on previous move?                    \n          const {\n            pieceX: startX,\n            pieceY: startY,\n            targetX: endX,\n            targetY: endY\n          } = parseMove(lastMove);\n\n          if (startX === targetX && startY === targetPawn.boardY + 2 * step && endX === targetPawn.boardX && endY === targetPawn.boardY) {\n            // move enemy pawn back 1 square to simulate normal capture\n            targetPawn.boardY += step;\n            targetPawn.enPassant = true;\n            capture = true;\n          } else {\n            console.log(\"enemy pawn did not move 2 squares on previous move:\" + lastMove);\n          }\n        } else {// console.log(\"no enemy pawn on en passant square\")\n        }\n      }\n\n      return capture;\n    }\n  } // king\n\n\n  if (piece.name === \"king\") {\n    // normal move\n    if (diffX <= 1 && diffY <= 1) {\n      return true;\n    } // castling\n\n\n    if (!piece.hasMoved) {\n      const rookX = targetX === 6 ? 7 : 0;\n      const rookY = piece.color === \"white\" ? 7 : 0;\n\n      if (diffX === 2 && diffY === 0 && targetY === rookY) {\n        // cannot castle out of check                \n        if (kingInCheck(pieces, piece.boardX, piece.boardY)) {\n          console.log(\"cannot castle out of check\");\n          return false;\n        } // check for rook\n\n\n        const rook = pieces.find(p => p.name === \"rook\" && p.color === piece.color && p.boardX === rookX && p.boardY === rookY && !p.hasMoved);\n\n        if (!rook) {\n          return false;\n        } // short\n\n\n        if (targetX === 6) {\n          if (!safeSquare(pieces, piece.color, 5, rookY)) {\n            console.log(\"cannot castle through check\");\n            return false;\n          }\n\n          return true;\n        } // long\n\n\n        if (targetX === 2) {\n          if (!safeSquare(pieces, piece.color, 3, rookY)) {\n            console.log(\"cannot castle through check\");\n            return false;\n          }\n\n          return true;\n        }\n      }\n    }\n  }\n\n  if (piece.name === \"queen\") {\n    return diffX === 0 || diffY === 0 || diffX === diffY;\n  }\n\n  if (piece.name === \"rook\") {\n    return diffX === 0 || diffY === 0;\n  }\n\n  if (piece.name === \"bishop\") {\n    return diffX === diffY;\n  }\n\n  if (piece.name === \"knight\") {\n    return diffX === 1 && diffY === 2 || diffX === 2 && diffY === 1;\n  }\n\n  return false;\n}\n\nmodule.exports = {\n  makeMove,\n  legalMove,\n  initializePieces,\n  parseMove\n};\n\n//# sourceURL=webpack://pixelchess/./modules/chessJS/move.js?");

/***/ }),

/***/ "./modules/chessJS/utils.js":
/*!**********************************!*\
  !*** ./modules/chessJS/utils.js ***!
  \**********************************/
/***/ ((module) => {

eval("// is the square at indices x,y on the board?\nconst validSquare = (x, y) => {\n  return x >= 0 && x <= 7 && y >= 0 && y <= 7;\n}; // convert chess notation (file rank file rank) to x,y,x,y\n\n\nconst parseMove = move => {\n  let pieceX = move.charCodeAt(0) - 97;\n  let pieceY = 7 - (parseInt(move[1]) - 1);\n  let targetX = move.charCodeAt(2) - 97;\n  let targetY = 7 - (parseInt(move[3]) - 1);\n  const parsed = {\n    pieceX,\n    pieceY,\n    targetX,\n    targetY\n  }; // console.log(`move: ${move} parsed: ${pieceX} ${pieceY} ${targetX} ${targetY}`)\n\n  return parsed;\n};\n\nconst coordsToNotation = (x, y) => {\n  const file = String.fromCharCode(x + 97);\n  const rank = 8 - y;\n  return file + rank;\n}; // return true if a piece is located at x,y\n\n\nconst isOccupied = (pieces, x, y) => {\n  let occupied = false;\n  pieces.forEach(p => {\n    if (p.boardX === x && p.boardY === y) {\n      occupied = true;\n    }\n  });\n  return occupied;\n}; // return true is piece of same color is located at x,y\n\n\nconst isBlocked = (pieces, color, x, y) => {\n  let blocked = false;\n  pieces.forEach(p => {\n    if (p.color === color && p.boardX === x && p.boardY === y) {\n      blocked = true;\n    }\n  });\n  return blocked;\n};\n\nconst createPiece = (pieces, color, name, boardX, boardY) => {\n  pieces.push({\n    color,\n    name,\n    boardX,\n    boardY,\n    hasMoved: false,\n    delete: false\n  });\n}; // create pieces in their starting configuration\n\n\nconst initializePieces = pieces => {\n  // pawns\n  for (let i = 0; i < 8; i++) {\n    createPiece(pieces, \"white\", \"pawn\", i, 6);\n    createPiece(pieces, \"black\", \"pawn\", i, 1);\n  } // bishops\n\n\n  createPiece(pieces, \"white\", \"bishop\", 2, 7);\n  createPiece(pieces, \"white\", \"bishop\", 5, 7);\n  createPiece(pieces, \"black\", \"bishop\", 2, 0);\n  createPiece(pieces, \"black\", \"bishop\", 5, 0); // knights\n\n  createPiece(pieces, \"white\", \"knight\", 1, 7);\n  createPiece(pieces, \"white\", \"knight\", 6, 7);\n  createPiece(pieces, \"black\", \"knight\", 1, 0);\n  createPiece(pieces, \"black\", \"knight\", 6, 0); // rooks\n\n  createPiece(pieces, \"white\", \"rook\", 0, 7);\n  createPiece(pieces, \"white\", \"rook\", 7, 7);\n  createPiece(pieces, \"black\", \"rook\", 0, 0);\n  createPiece(pieces, \"black\", \"rook\", 7, 0); // kings\n\n  createPiece(pieces, \"white\", \"king\", 4, 7);\n  createPiece(pieces, \"black\", \"king\", 4, 0); // queens\n\n  createPiece(pieces, \"white\", \"queen\", 3, 7);\n  createPiece(pieces, \"black\", \"queen\", 3, 0);\n};\n\nconst loadBoard = board => {\n  const pieces = [];\n  board.forEach((square, index) => {\n    if (square !== '_') {\n      const color = square === square.toUpperCase() ? \"black\" : \"white\";\n      createPiece(pieces, color, charToName(square), index % 8, Math.floor(index / 8));\n    }\n  });\n  return pieces;\n};\n\nconst charToName = char => {\n  const c = char.toLowerCase();\n  const chars = ['p', 'b', 'n', 'r', 'q', 'k'];\n  const names = [\"pawn\", \"bishop\", \"knight\", \"rook\", \"queen\", \"king\"];\n  const idx = chars.indexOf(c);\n  return names[idx];\n};\n\nmodule.exports = {\n  validSquare,\n  coordsToNotation,\n  isOccupied,\n  isBlocked,\n  parseMove,\n  initializePieces,\n  loadBoard,\n  charToName\n};\n\n//# sourceURL=webpack://pixelchess/./modules/chessJS/utils.js?");

/***/ }),

/***/ "./node_modules/qs/lib/formats.js":
/*!****************************************!*\
  !*** ./node_modules/qs/lib/formats.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n\n//# sourceURL=webpack://pixelchess/./node_modules/qs/lib/formats.js?");

/***/ }),

/***/ "./node_modules/qs/lib/index.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar stringify = __webpack_require__(/*! ./stringify */ \"./node_modules/qs/lib/stringify.js\");\nvar parse = __webpack_require__(/*! ./parse */ \"./node_modules/qs/lib/parse.js\");\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n//# sourceURL=webpack://pixelchess/./node_modules/qs/lib/index.js?");

/***/ }),

/***/ "./node_modules/qs/lib/parse.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/parse.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/qs/lib/utils.js\");\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n\n//# sourceURL=webpack://pixelchess/./node_modules/qs/lib/parse.js?");

/***/ }),

/***/ "./node_modules/qs/lib/stringify.js":
/*!******************************************!*\
  !*** ./node_modules/qs/lib/stringify.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/qs/lib/utils.js\");\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n\n//# sourceURL=webpack://pixelchess/./node_modules/qs/lib/stringify.js?");

/***/ }),

/***/ "./node_modules/qs/lib/utils.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/utils.js ***!
  \**************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n\n\n//# sourceURL=webpack://pixelchess/./node_modules/qs/lib/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./client/src/game.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;